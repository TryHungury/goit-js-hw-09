{"mappings":"AAAa,CACFA,SAASC,cAAc,SACtBD,SAASC,cAAc,gBACxBD,SAASC,cAAc,eACrBD,SAASC,cAAc,kBAOjCC,GAAUC,iBAAiB,UAAU,SAACC,GACvCA,EAAEC,iBAEF,IAAoDC,EAAfF,EAAEG,cAAhCC,SAAUC,EAAKH,EAALG,MAAMC,EAAIJ,EAAJI,MAMzB,SAAuBC,EAAUD,EAAMD,GAGnC,I,kBACE,IAAMG,EAAgBC,KAAKC,SAAW,GAClCC,EAAYN,EAEZO,EAAM,IACRC,GAAS,GAIXF,EAAYG,SAASH,GAAaL,EAAOO,EACzC,IAAME,EAAM,CAACC,IAAAJ,EAAKK,UAAAN,GAGfO,YAAQ,WACO,IAAIC,SAAQ,SAACC,EAASC,GAClCb,EACFY,EAAQL,GAERM,EAAON,E,IAIHO,MAAK,SAAAC,GAAGA,EAADC,E,IAAGP,EAASM,EAATN,UAChBQ,QAAQC,IAAI,uBAAmCC,OAAVf,EAAI,QAAgBe,OAAVV,EAAU,M,IAE1DW,OAAM,SAAAL,G,IAAEP,EAAGO,EAAHP,IAAKC,EAASM,EAATN,UACZQ,QAAQC,IAAI,sBAAgCC,OAAVX,EAAI,QAAgBW,OAAVV,EAAU,M,MAErDN,E,EA9BDE,EAAQ,EAEHgB,EAAM,EAAGA,GAAOtB,EAAUsB,GAAK,EAACC,EAAAD,E,CAP3CE,CAFkC7B,EAAN8B,OAEPC,MAAO3B,EAAK2B,MAAO5B,EAAM4B,M","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formRef: document.querySelector(\".form\"),\n  delayRef: document.querySelector(\"[name=delay]\"),\n  stepRef: document.querySelector(\"[name=step]\"),\n  amountRef: document.querySelector(\"[name=amount]\")\n}\n// console.log(\"üöÄformRef\", refs.formRef)\n// console.log(\"üöÄdelayRef\", refs.delayRef)\n// console.log(\"üöÄstepRef\", refs.stepRef)\n// console.log(\"üöÄamountRef\", refs.amountRef)\n\nrefs.formRef.addEventListener('submit', (e)=>{\n  e.preventDefault();\n\n  const {elements:{delay,step,amount}}=e.currentTarget;\n\n  createPromise(amount.value, step.value, delay.value)\n  // console.log(e.target[0].value)\n})\n\nfunction createPromise(position, step, delay) {\n    let count = 0;\n    \n    for (let idx = 1; idx <= position; idx+=1) {\n      const shouldResolve = Math.random() > 0.3;\n      let stepDelay = delay;\n\n      if (idx > 1) {\n        count += 1;\n        // console.log(count)\n      }\n\n      stepDelay = parseInt(stepDelay) + step * count;\n      const obj = {idx, stepDelay}\n      // console.log(\"üöÄobj\", obj)\n\n      setTimeout(() => {\n        const promise = new Promise((resolve, reject) => { \n        if (shouldResolve) {\n          resolve(obj)\n        } else {\n          reject(obj)\n        }\n      })\n      \n      promise.then(({i, stepDelay}) => {\n        console.log(`‚úÖ Fulfilled promise ${idx} in ${stepDelay}ms`);\n      })\n      .catch(({idx, stepDelay}) => {\n        console.log(`‚ùå Rejected promise ${idx} in ${stepDelay}ms`);\n      });\n      }, stepDelay);\n    }\n}\n"],"names":["document","querySelector","$ce04d3a99e08e73b$var$refs","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay","step","position","shouldResolve","Math","random","stepDelay1","idx1","count","parseInt","obj","idx","stepDelay","setTimeout","Promise","resolve","reject","then","param","i","console","log","concat","catch","idx11","_loop","$ce04d3a99e08e73b$var$createPromise","amount","value"],"version":3,"file":"03-promises.d6b7bdce.js.map"}