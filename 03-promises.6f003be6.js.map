{"mappings":"CAAa,CACXA,QAASC,SAASC,cAAc,SAChCC,SAAUF,SAASC,cAAc,gBACjCE,QAASH,SAASC,cAAc,eAChCG,UAAWJ,SAASC,cAAc,mBAO/BF,QAAQM,iBAAiB,UAAWC,IACvCA,EAAEC,iBAEF,MAAOC,UAASC,MAACA,EAAKC,KAACA,EAAIC,OAACA,IAASL,EAAEM,eAMzC,SAAuBC,EAAUH,EAAMD,GACnC,IAAIK,EAAQ,EAEZ,IAAK,IAAIC,EAAM,EAAGA,GAAOF,EAAUE,GAAK,EAAG,CACzC,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,IAAIC,EAAYV,EAEZM,EAAM,IACRD,GAAS,GAIXK,EAAYC,SAASD,GAAaT,EAAOI,EACzC,MAAMO,EAAM,CAACC,IAAAP,EAAKQ,UAAAJ,GAGfK,YAAQ,KACO,IAAIC,SAAQ,CAACC,EAASC,KAClCX,EACFU,EAAQL,GAERM,EAAON,EAAI,IAIPO,MAAK,EAACC,EAACA,EAACN,UAAEA,MAChBO,QAAQC,IAAI,uBAAqBhB,QAAYQ,MAAc,IAE5DS,OAAM,EAACV,IAACA,EAAGC,UAAEA,MACZO,QAAQC,IAAI,sBAAoBT,QAAUC,MAAc,GACxD,GACCJ,E,EAnCPc,CAActB,EAAOuB,MAAOxB,EAAKwB,MAAOzB,EAAMyB,MAAM","sources":["src/js/03-promises.js"],"sourcesContent":["const refs = {\n  formRef: document.querySelector(\".form\"),\n  delayRef: document.querySelector(\"[name=delay]\"),\n  stepRef: document.querySelector(\"[name=step]\"),\n  amountRef: document.querySelector(\"[name=amount]\")\n}\n// console.log(\"üöÄformRef\", refs.formRef)\n// console.log(\"üöÄdelayRef\", refs.delayRef)\n// console.log(\"üöÄstepRef\", refs.stepRef)\n// console.log(\"üöÄamountRef\", refs.amountRef)\n\nrefs.formRef.addEventListener('submit', (e)=>{\n  e.preventDefault();\n\n  const {elements:{delay,step,amount}}=e.currentTarget;\n\n  createPromise(amount.value, step.value, delay.value)\n  // console.log(e.target[0].value)\n})\n\nfunction createPromise(position, step, delay) {\n    let count = 0;\n    \n    for (let idx = 1; idx <= position; idx+=1) {\n      const shouldResolve = Math.random() > 0.3;\n      let stepDelay = delay;\n\n      if (idx > 1) {\n        count += 1;\n        // console.log(count)\n      }\n\n      stepDelay = parseInt(stepDelay) + step * count;\n      const obj = {idx, stepDelay}\n      // console.log(\"üöÄobj\", obj)\n\n      setTimeout(() => {\n        const promise = new Promise((resolve, reject) => { \n        if (shouldResolve) {\n          resolve(obj)\n        } else {\n          reject(obj)\n        }\n      })\n      \n      promise.then(({i, stepDelay}) => {\n        console.log(`‚úÖ Fulfilled promise ${idx} in ${stepDelay}ms`);\n      })\n      .catch(({idx, stepDelay}) => {\n        console.log(`‚ùå Rejected promise ${idx} in ${stepDelay}ms`);\n      });\n      }, stepDelay);\n    }\n}\n"],"names":["formRef","document","querySelector","delayRef","stepRef","amountRef","addEventListener","e","preventDefault","elements","delay","step","amount","currentTarget","position","count","idx1","shouldResolve","Math","random","stepDelay1","parseInt","obj","idx","stepDelay","setTimeout","Promise","resolve","reject","then","i","console","log","catch","$47d4ff9957288465$var$createPromise","value"],"version":3,"file":"03-promises.6f003be6.js.map"}